#!/usr/bin/env python3
##############################################################################
# examples/audio_pcm_capture_objif/config/msgq_layout.conf
#
#   Copyright 2019 Sony Semiconductor Solutions Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of Sony Semiconductor Solutions Corporation nor
#    the names of its contributors may be used to endorse or promote
#    products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

import sys

sys.path.append('../../../sdk/tools')

import msgq_layout

# User-defined constants must be the names of uppercase letters and
# numbers starting with "U_".
# When defined with a name beginning with "U_MSGQ_",
# it is also output as a define macro to msgq_id.h

##############################################################################
# Message queue pool definition
#
#   ID:         The name of the message queue pool ID is specified by a
#               character string beginning with "MSGQ_".
#               The following are forbidden because they are reserved.
#               "MSGQ_NULL", "MSGQ_TOP", "MSGQ_END"
#
#   n_size:     The number of bytes (8 or more and 512 or less)
#               of each element of the normal priority queue.
#               Specify fixed header length (8 bytes) + parameter length
#               as a multiple of 4.
#               In the case of a shared queue, it is rounded up to the value
#               of a multiple of 64 in the tool.
#
#   n_num:      Number of elements of the normal priority queue
#               (1 or more and 16384 or less).
#
#   h_size:     Number of bytes (0 or 8 to 512 inclusive) for each element
#               of the high priority queue.
#               Specify 0 when not in use.
#               Specify fixed header length (8 bytes) + parameter length
#               as a multiple of 4.
#               In the case of a shared queue, it is rounded up to the value
#               of a multiple of 64 in the tool.
#
#   h_num:      Number of elements in the high priority queue
#               (0 or 1 to 16384 or less).
#               Specify 0 when not in use.
#
msgq_layout.MsgQuePool = [
# [ ID,                                             n_size  n_num  h_size  h_num
  # For Audio
  ["MSGQ_AUD_APP",                                     64,   32,     0,      0],
  ["MSGQ_AUD_MGR",                                     88,   30,     0,      0],
  ["MSGQ_AUD_CAP",                                     24,   16,     0,      0],
  ["MSGQ_AUD_CAP_SYNC",                                16,    8,     0,      0],
  ["MSGQ_AUD_FRONTEND",                                48,   10,     0,      0],
  ["MSGQ_AUD_PREDSP",                                  20,    5,     0,      0],
  None # end of user definition
] # end of MsgQuePool

#############################################################################
# For debugging, specify the value that fills the area after message pop
# with 8 bits.
# When it is 0, no area filling is done. Specify 0 except when debugging.
# When specifying something other than 0, you need to change the
# following file.
#    sdk/modules/memutils/message/include/MsgQue.h
# Change the value of the following description.
#   #define MSG_FILL_VALUE_AFTER_POP	0x0
#
msgq_layout.MsgFillValueAfterPop = 0x00

#############################################################################
# Whether checking whether the type of message parameter matches transmission
# and reception.
# Only in-CPU messages are targeted.
# When true is specified, a 4-byte area is added to each element
# of the queue whose element size is larger than 8, and the processing time
# also increases.
# Usually, specify false.
# If you specify something other than false, change the following file.
#    sdk/modules/memutils/message/include/MsgPacket.h
# Change the value of the following description.
#   #define MSG_PARAM_TYPE_MATCH_CHECK	false
#
msgq_layout.MsgParamTypeMatchCheck = False

# generate header files
msgq_layout.generate_files()
